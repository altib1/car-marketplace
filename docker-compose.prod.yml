services:
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile_prod
    container_name: php-container
    volumes:
      - php_public:/var/www/html/public
      - symfony_cache:/var/www/html/var/cache
      - symfony_logs:/var/www/html/var/log
      - symfony_sessions:/var/www/html/var/sessions
    user: "www-data"
    environment:
      PHP_INI_UPLOAD_MAX_FILESIZE: "20M"
      PHP_INI_POST_MAX_SIZE: "21M"
      ELASTICSEARCH_URL: "http://${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}@elasticsearch:9200"
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    networks:
      - app-network
    env_file:
      - .env.prod
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "php-fpm -t || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile_prod
    container_name: nginx-container
    volumes:
      - php_public:/var/www/html/public:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default_prod.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    depends_on:
      php:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: db-container
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    restart: unless-stopped
    networks:
      - app-network
    env_file:
      - .env.prod
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 10

  elasticsearch:
    image: elasticsearch:7.17.9
    container_name: elasticsearch-container
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_USERNAME=${ELASTIC_USERNAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -s -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  elasticsearch-data:
  node_modules:
  npm_cache:
  var_cache:
  var_log:
  var_sessions:
  symfony_var:
    driver: local
  symfony_cache:
  symfony_logs:
  symfony_sessions:
  php_public: