FROM php:8.1-fpm

# Install system dependencies
RUN apt-get update && apt-get install -y \
    libpq-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev \
    libicu-dev \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libxslt-dev \
    curl \
    git \
    zip \
    unzip \
    && curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    && npm install -g npm@latest

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Configure GD
RUN docker-php-ext-configure gd --with-jpeg

# Install PHP extensions
RUN docker-php-ext-install -j$(nproc) \
    pdo \
    pdo_mysql \
    zip \
    opcache \
    intl \
    gd

# Configure PHP for production
RUN mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"

# Configure OpCache
RUN echo "opcache.memory_consumption=128\n \
    opcache.interned_strings_buffer=8\n \
    opcache.max_accelerated_files=4000\n \
    opcache.revalidate_freq=60\n \
    opcache.fast_shutdown=1\n \
    opcache.enable_cli=1\n \
    opcache.enable=1" > /usr/local/etc/php/conf.d/opcache.ini

WORKDIR /var/www/html/src

# Create necessary directories
RUN mkdir -p \
    var/cache \
    var/log \
    public/build \
    public/build/.vite \
    node_modules \
    /var/www/.npm

# Copy all necessary files
COPY --chown=www-data:www-data ./src ./

# Install npm dependencies
RUN npm install

# Build assets using the local vite executable
RUN npm run build

# Set correct permissions for the build directory
RUN chown -R www-data:www-data /var/www/html/src/public/build && \
    chmod -R 755 /var/www/html/src/public/build

USER www-data

# Install composer dependencies
RUN SYMFONY_ENV=prod composer install --no-dev --optimize-autoloader --no-scripts

EXPOSE 9000

CMD ["php-fpm"]